 o      http      em português    protocolo de transferência de hipertexto     é um   protocolo de comunicação    na   camada de aplicação   segundo o   modelo osi    utilizado para sistemas de informação de   hipermídia    distribuídos e colaborativos  ref name  t  berners-lee et all  1996  t  berners-lee et all  1996  ref  ele é a base para a comunicação de dados da   world wide web     hipertexto   é o texto estruturado que utiliza ligações lógicas    hiperlink  s  entre   nó  s contendo texto  o http é o protocolo para a troca ou transferência de hipertexto coordenado pela   world wide web consortium   e a   internet engineering task force    culminou na publicação de uma série de     request for comments requests for comments      mais notavelmente o rfc 2616  de junho de 1999  que definiu o http 1 1  em junho de 2014 foram publicados 6 rfc s para maior clareza do protocolo http 1 1 ref   ref  em março de 2015  foi divulgado o lançamento do http 2  a atualização deixará o navegador com um tempo de resposta melhor e mais seguro  ele também melhorará a navegação em smartphones   ref   ref para acedermos a outro documento a partir de uma palavra presente no documento actual podemos utilizar   hiperligação hiperligações    ou âncoras   estes documentos se encontram no sítio com um endereço de página da   internet     e para acessá-los deve-se digitar o respectivo endereço  denominado   uri      universal resource identifier   ou identificador universal de recurso   que não deve ser confundido com   url      universal resource locator   ou localizador universal de recurso   um tipo de uri que pode ser directamente localizado    visão técnica geral  o http funciona como um protocolo de   requisição-resposta   no modelo computacional   cliente-servidor    um   navegador web    por exemplo  pode ser o   cliente   e uma aplicação em um computador que   host hospeda   um   sítio da web   pode ser o   servidor    o cliente submete uma mensagem de   requisição   http para o servidor  o servidor  que fornece os   recursos    como arquivos   html   e outros conteúdos  ou realiza outras funções de interesse do cliente  retorna uma mensagem   resposta   para o cliente  a resposta contém informações de estado completas sobre a requisição e pode também conter o conteúdo solicitado no corpo de sua mensagem um navegador web é um exemplo de   agente de usuário    au   outros tipos de agentes de usuário incluem o software de indexação usado por provedores de consulta    web crawler       navegador por voz navegadores vocais      aplicação móvel aplicações móveis   e outros software que acessam  consomem ou exibem conteúdo web o http é projetado para permitir intermediações de elementos de rede para melhorar ou habilitar comunicações entre clientes e servidores  sites web de alto tráfego geralmente se beneficiam dos servidores de   cache web   que entregam conteúdo em nome de   servidor upstream servidores de upstream   para melhorar o tempo de resposta  navegadores web armazenam os recursos web acessados anteriormente e reutilizam-nos quando possível para reduzir o tráfego de rede    servidores proxy   http nas fronteiras de   rede privada redes privadas   podem facilitar a comunicação para o cliente sem um endereço globalmente roteável  transmitindo mensagens com servidores externos    história   o hypertext transfer protocol é um protocolo de aplicação responsável pelo tratamento de pedidos e respostas entre cliente e servidor na   world wide web    ele surgiu da necessidade de distribuir informações pela   internet   e para que essa distribuição fosse possível foi necessário criar uma forma padronizada de comunicação entre os clientes e os servidores da web e entendida por todos os computadores ligados à internet  com isso  o protocolo http passou a ser utilizado para a comunicação entre computadores na internet e a especificar como seriam realizadas as transacções entre clientes e servidores  através do uso de regras básicas este protocolo tem sido usado pela www desde   1990    a primeira versão de http  chamada http 0 9  era um protocolo simples para a transferência de dados no formato de texto   ascii   pela internet  através de um único método de requisição  chamado  code get  code   a versão http 1 0 foi desenvolvida entre   1992   e   1996   para suprir a necessidade de transferir não apenas texto  com essa versão  o protocolo passou a transferir mensagens do tipo   mime mime44      multipurpose internet mail extension    e foram implementados novos métodos de requisição  chamados  code post  code  e  code head  code  no http 1 1  versão actual do protocolo descrito na rfc 2616  ref name  fielding et al 1999  p  7  fielding et al 1999  p  7  ref  foi desenvolvido um conjunto de implementações adicionais ao http 1 0  como por exemplo  o uso de conexões persistentes  o uso de servidores     proxy     que permitem uma melhor organização da     cache      novos métodos de requisições  entre outros  afirma-se que o http também é usado como um protocolo genérico para comunicação entre os agentes de utilizadores e   proxies     gateways   com outros protocolos  como o   smtp      nntp      ftp      gopher    e   wais    permitindo o acesso a recursos disponíveis em aplicações diversas  ref name  fielding et al 1999  p  7      sessão http   uma sessão http é uma sequência de transações de rede de requisição-resposta  um cliente http inicia uma requisição estabelecendo uma conexão   transmission control protocol    tcp  para uma   porta   particular de um servidor  normalmente a porta 80  veja   anexo lista de portas de protocolos lista de portas de protocolos     um servidor http ouvindo naquela porta espera por uma mensagem de requisição de cliente  recebendo a requisição  o servidor retorna uma linha de estado  como  http 1 1 200 ok   e uma mensagem particular própria  o corpo desta mensagem normalmente é o recurso solicitado  apesar de uma mensagem de erro ou outra informação também poder ser retornada    cookies   o termo cookie é derivado do inglês que significa biscoito  recebeu esse nome de uma antiga gíria usada pelos programadores que consistia em um programa chamava um procedimento e recebia de volta algo que seria necessário apresentar novamente mais tarde para realizar algum trabalho  foi criado pela netscape para solucionar o problema do envio e solicitação de arquivos  que era esquecido pelo servidor e que poderia ser usado por outros computadores com o mesmo ip conforme  tanembaum  2003   o que causava problemas  pois não se sabia na realidade se era ou não aquele usuário mesmo  os cookies são arquivos ou strings e não são programas executáveis  eles são tratados como dados pelo navegador  não existe nenhuma maneira dele ser usado como vírus  apesar de que podem ser explorados bugs no servidor e causar a ativação de um cookie como vírus  por um hacker  basicamente ele é um grupo de dados trocados entre o servidor de páginas e o navegador colocado em um ficheiro criado no computador do usuário  serve para manter a persistência das sessões http  ele funciona da seguinte forma  um usuário solicita uma página da web  nisso o servidor pode fornecer informações adicionais acompanhando a página solicitada  essas informações podem incluir um cookie  um pequeno arquivo ou string  com 4 kb no máximo   este cookie pode ter até 5 campos  figura abaixo   domain  path  content  expires  secure  domain informa de onde veio o cookie  o navegador confirma que os servidores estão enviando dados fieis a respeito de seu domínio  cada domínio pode armazenar no máximo 20 cookies por cliente  o campo path é um caminho na estrutura de diretórios do servidor que identifica as partes da árvore de arquivos do servidor que podem usar o cookie  frequentemente  ele obtém o símbolo    barra   que representa a árvore inteira  o campo content utiliza a forma nome   valor  podendo o servidor definir da maneira que quiser tanto o valor quanto o nome  e é nele que fica armazenado o conteúdo do cookie  expires é o campo que faz o cookie persistir  nele contém a data e o horário  e se ele estiver ausente o navegador descartara automaticamente após o termino da seção  o último campo define se ele é seguro ou não    domain path content expires secure - toms-casino com           customerld 497793521  15 de outubro de 200217 00    yes    - joes-store com          cart 1-00501 1-07031 2-13721 11 de outubro de 200214 22    no    - aportal com          prefs stk sunw orcl spt jets 31 de dezembro de 201023 59    no    - sneaky com 31-         userid 3627239101 12-1223 59    no     figura x  alguns exemplos de cookie  fonte   tanembaum  2003  o cookie é usado para identificar um usuário que configurou uma página web  para que na próxima vez que ele entrar ela esteja configurada do modo em que ele deixou  pode ser usado também quando se faz a solicitação de armazenamento de senha  na vez posterior em que entrar no site  a sua senha será lembrada  é usado também em sites de compra  como e-commerce  armazenando os produtos que o cliente colocou no carrinho para que no final da compra não necessite fazer todo o processo novamente    funcionamento   um sistema de comunicação em rede possui diversos protocolos que trabalham em conjunto para o fornecimento de serviços  para que o protocolo http consiga transferir seus dados pela web  é necessário que os protocolos   tcp   e   ip      internet protocol    protocolo de internet  tornem possível a conexão entre clientes e servidores através de     socket  s     tcp ip   de acordo com fielding  ref fielding et al  1999  p  10   ref  o http utiliza o modelo   cliente-servidor    como a maioria dos protocolos de rede  baseando-se no paradigma de requisição e resposta  um programa requisitante  cliente  estabelece uma conexão com um outro programa receptor  servidor  e envia-lhe uma requisição  contendo a   uri    a versão do protocolo  uma mensagem   mime    padrão utilizado para codificar dados em formato de textos ascii para serem transmitidos pela internet  contendo os modificadores da requisição  informações sobre o cliente e  possivelmente  o conteúdo no corpo da mensagem o servidor responde com uma linha de status    status line    incluindo sua versão de protocolo e com os códigos de erro informando se a operação foi bem sucedida ou fracasso  seguido pelas informações do servidor    metainformação metainformações   da entidade e possível conteúdo no corpo da mensagem  após o envio da resposta pelo servidor  encerra-se a conexão estabelecida    mensagem http   o protocolo http faz a comunicação entre o cliente e o servidor por meio de mensagens  o cliente envia uma mensagem de requisição de um recurso e o servidor envia uma mensagem de resposta ao cliente com a solicitação  segundo foscarini  ref foscarini  2001  p  13   ref  os dois tipos de mensagens existentes no protocolo utilizam um formato genérico  definido na rfc 822  para a transferência de entidades uma mensagem  tanto de requisição quanto de resposta  é composta  conforme definido na rfc 2616  ref fielding et al  1999  p  21  ref  por uma linha inicial  nenhuma ou mais linhas de cabeçalhos  uma linha em branco obrigatória finalizando o cabeçalho e por fim o corpo da mensagem  opcional em determinados casos  nessa seção serão apresentados os campos que compõem uma mensagem mais detalhadamente  ou seja  o http apresenta o sítio ou local onde está a página da internet     cabeçalho da mensagem    o cabeçalho da mensagem      header      é utilizado para transmitir informações adicionais entre o cliente e o servidor  ele é especificado imediatamente após a linha inicial da transação  método   tanto para a requisição do cliente quanto para a resposta do servidor  seguido de dois pontos     e um valor  existem quatro tipos de cabeçalhos que poderão ser incluídos na mensagem os quais são    general-header      request-header      response-header   e   entity-header    ref cf  fielding et al  1999  p  21  ref esses cabeçalhos são utilizados para enviar informações adicionais sobre a mensagem transmitida    general-header     a requisição e os clientes    request-header    que comunicam suas configurações e os formatos de documentos desejados como resposta  ref cf  bastos   ladeira  2001  ref  além disso  são utilizados pelo servidor ao retornar o recurso no qual foi requisitado pelo cliente  para transmitir informações que descrevem as configurações do servidor e do recurso identificado pelo uri de requisição  e que não pertence à linha de status    response-header     na rfc 2616  ref cf  fielding et al  1999  ref  estão descritos todos os campos que pertencem a esses cabeçalhos     style  position relative  float right  margin-left 20px  margin-bottom 20px    alguns tipos mime ref fonte  fielding et al  1999  ref  -  exemplo    descrição -  text plain    arquivo no formato texto  ascii  -  text html    arquivo no formato   html    utilizado br   como padrão para documentos web -  image gif    imagem com o formato   gif   -  image jpeg    imagem com o formato   jpeg   -  application zip    arquivo   compactador de arquivos compactado        corpo da mensagem    uma mensagem http pode conter um corpo de dados que são enviados abaixo das linhas de cabeçalho  em uma mensagem de resposta  o corpo da mensagem é o recurso que foi requisitado pelo cliente  ou ainda uma mensagem de erro  caso este recurso não seja possível  já em uma mensagem de requisição  o corpo pode conter dados que serão enviados diretamente pelo usuário ou um arquivo que será enviado para o servidor  quando uma mensagem http tiver um corpo  poderão ser incluídos cabeçalhos de entidades que descrevem suas características  como por exemplo  o   content-type   que informa o tipo mime dos dados no corpo da mensagem e o   content-length   que informa a quantidade de bytes que o corpo da mensagem contém  a tabela ao lado apresenta alguns tipos mime     requisição    de acordo com fielding  ref fielding  1999  p  24   ref  uma mensagem de requisição do cliente é composta pelos seguintes campos  uma linha inicial    request-line     linhas de cabeçalhos    request-header     uma linha em branco obrigatória e um corpo de mensagem opcional  a linha inicial de uma requisição é composta por três partes separadas por espaços  o método    method     a identificação do uri    request-uri    e a versão do http    http-version    utilizado segundo bastos   ladeira  ref bastos   ladeira  ref    request-uri   é um   identificador uniforme de recurso    uniform resource identifier  que identifica sobre qual recurso será aplicada a requisição  no protocolo http  o tipo de uri utilizado é chamado de url  uniform resource locator   composto pela identificação do protocolo  pelo endereço do computador servidor e pelo documento requisitado  ref cf  embratel  2002  ref    métodos de solicitação   o protocolo http define oito métodos  get  head  post  put  delete  trace  options e connect  que indicam a ação a ser realizada no recurso especificado  conforme bastos e ladeiras  ref bastos   ladeiras  2001   ref  o método determina o que o servidor deve fazer com o url fornecido no momento da requisição de um recurso  um   servidor http   deve implementar ao menos os métodos get e head uma    solicitação http     ou   http request   é uma maneira do   navegador  informática  navegador   mostrar uma   site página da internet   utilizando um dos oito métodos de solicitação do protocolo http  ref name  http request    ref além de solicitar um determinado arquivo  envia várias informação para o servidor  sendo elas  o seu   ip    a versão do navegador que está usando  que página utilizou para pedir a   http request   e a idioma que você usa  entre outros  ref name  http request       get   solicita algum recurso como um arquivo ou um     script       cgi    qualquer dado que estiver identificado pelo uri  por meio do protocolo http  por exemplo  segue abaixo uma comunicação entre um cliente e um servidor http  o servidor possui a url  code www exemplo com  code   porta 80 o   pedido do cliente    seguido por uma linha em branco  de maneira que o pedido termina com um     newline     duplo  cada um composto por um     carriage return     seguido de um     line feed       get  index html http 1 1 host  www exemplo como cabeçalho  code host  code  reconhece vários diferentes nomes   domain name system dns   que tenham o mesmo   ip   a   resposta do servidor    seguida por uma linha em branco e o texto da página solicitada   http 1 1 200 ok date  mon  23 may 2005 22 38 34 gmt server  apache 1 3 27  unix    red-hat linux  last-modified  wed  08 jan 2003 23 11 55 gmt etag   3f80f-1b6-3e1cb03b  accept-ranges  bytes content-length  438 connection  close content-type  text html  charset utf-8   head   variação do  code get  code  em que o recurso não é retornado  é usado para obter   metainformação metainformações   por meio do cabeçalho da resposta  sem ter que recuperar todo o conteúdo    post   envia dados para serem processados  por exemplo  dados de um formulário html  para o recurso especificado  os dados são incluídos no corpo do comando   sua utilização em uma requisição ocorre quando é necessário enviar dados ao servidor para serem processados  geralmente por um programa   script   identificado no   request-uri    uma requisição por meio desse método sempre requer que as informações submetidas sejam incluídas no corpo da mensagem e formatadas como uma   query string    além de conter cabeçalhos adicionais especificando seu tamanho   code content-length  code   e seu formato   code content-type  code    por isso  esse método oferece uma maior segurança em relação aos dados transferidos  ao contrário do método  code get  code  que os dados são anexados a url  ficando visíveis ao usuário  ref herrmann  1997  ref  por exemplo   post  index html http 1 0  accept  text html  if-modified-since  sat  29 oct 1999 19 43 31 gmt  content-type  application x-www-form-urlencoded  content-length  41    nome nomepessoa idade 99 curso computacao   put   edita as informações de um determinado recurso    delete   exclui o recurso    trace   ecoa o pedido  de maneira que o cliente possa saber o que os servidores intermediários estão mudando em seu pedido    options   recupera os métodos http que o servidor aceita    connect   serve para uso com um   proxy   que possa se tornar um túnel   ssl    um túnel pode ser usado  por exemplo  para criar uma conexão segura     códigos de estado      ver também    anexo lista de códigos de status http    do http 1 0 em diante  a primeira linha da resposta http é chamada   linha de estado   e inclui um   código de estado   numérico  como    http 404 404     e uma   frase de razão   textual  como  not found  - não encontrado   a maneira que o   agente de usuário   manipula a resposta depende primeiramente do código e secundariamente nos   cabeçalhos de resposta    códigos de estado personalizados podem ser usados  uma vez que  se o agente de usuário encontrar um código que ele não reconheça  ele pode usar o primeiro dígito do código para determinar a classe geral da resposta da mesma forma  as   frases de razão   padrões são apenas recomendações e podem ser substituídas com  equivalentes locais  a critério do desenvolvedor web  se o código de estado indicou um problema  o agente de usuário pode mostrar a   frase de razão   para o usuário  para que sejam fornecidas informações adicionais sobre a natureza do problema  o padrão também permite que o agente de usuário tente interpretar a   frase de razão    apesar disto poder ser imprudente uma vez que o padrão especifica explicitamente que os códigos de estado são legíveis por máquina e as   frases de razão   são legíveis por homens    conexões persistentes   no http 0 9 e 1 0  a conexão é fechada após um único par de requisição resposta  no http 1 1 um mecanismo de persistência de vida  keep-alive  foi introduzido  onde uma conexão pode ser reutilizada para mais de uma requisição  tais   conexões persistentes   reduzem a   latência   de requisição perceptível  pois o cliente não precisa renegociar a conexão tcp após a primeira requisição ter sido enviada  outro efeito colateral positivo é que em geral a conexão se torna mais rápida com o tempo devido ao mecanismo de   início-lento   do tcp a versão 1 1 do protocolo também faz melhoras na otimização de comprimento de banda para o http 1 0  por exemplo  o http 1 1 introduziu a   codificação de transferência em partes   para permitir que o conteúdo em conexões persistentes sejam transmitidos em vez de armazenados temporariamente para posterior transmissão  o   pipelining http   reduz ainda mais o tempo de atraso  permitindo que os clientes enviem várias requisições antes de esperar por cada resposta  outra melhoria para o protocolo foi o   byte serving    onde um servidor transmite apenas a porção de um recurso solicitado explicitamente por um cliente    estado de sessão http   o http é um   protocolo sem estado    um protocolo sem estado não exige que o servidor http retenha informações ou estado sobre cada usuário para a duração de várias solicitações  entretanto  algumas   aplicação web aplicações web   implementam estado ou   sessão  ciência da computação  sessões do lado servidor   usando um ou mais de um dos métodos a seguir     variável oculta variáveis ocultas   dentro de   formulário  html  formulários web      cookie cookies http    parâmetros de   query string    por exemplo   index php session id algum código único de sessão   resposta   para fielding  ref fielding et al  1999  p  26   ref  uma mensagem de resposta do servidor é composta pelos seguintes campos  uma linha inicial    status-line     linhas de cabeçalhos    responseheader     uma linha em branco obrigatória e um corpo de mensagem opcional  a linha inicial de uma resposta  chamada de linha de status  possui por sua vez três partes separadas por espaços  a versão do protocolo http    http-version     um código de status    status-code    da resposta  que fornece o resultado da requisição  e uma frase de justificativa    reason-phrase    que descreve o código do status     códigos de retorno    a linha inicial de uma resposta http indica ao cliente se sua requisição foi bem sucedida ou não  ref cf  herrman  1997  p  53  ref  essa situação é fornecida através de um código de retorno    status-code    e uma frase explicativa    reason-phrase     de acordo com fielding  ref fielding et al  1999  p  37   ref  o código de status é formado por três dígitos e o primeiro dígito representa a classe que pertence classificada em cinco tipos     1xx      informational    informação    utilizada para enviar informações para o cliente de que sua requisição foi recebida e está sendo processada     2xx      success    sucesso    indica que a requisição do cliente foi bem sucedida     3xx      redirection    redirecionamento    informa a ação adicional que deve ser tomada para completar a requisição     4xx      client error    erro no cliente    avisa que o cliente fez uma requisição que não pode ser atendida     5xx      server error    erro no servidor    ocorreu um erro no servidor ao cumprir uma requisição válida o protocolo http define somente alguns códigos em cada classe descritos na rfc 2616  mas cada servidor pode definir seus próprios códigos     conexões    segundo hirata  ref hirata  1999  ref  o http 1 0 é um protocolo sem estado  isto significa que as conexões entre um cliente e um servidor são encerradas após o envio de cada requisição ou resposta  cada vez que uma conexão é estabelecida ou encerrada  é consumida uma grande quantidade de tempo da cpu  de largura de banda e de memória na maioria das vezes  para se obter o resultado esperado  é necessário realizar mais de uma solicitação de recursos através de várias conexões  por exemplo  no caso de uma página web  que consiste de diversos arquivos   html   gif   css  etc  é preciso que sejam feitas várias requisições para compor a página  uma conexão não-persistente  o ideal seria que apenas uma conexão fosse utilizada para os pedidos e as respostas http  diminuindo  assim  a   overhead sobrecarga   ocasionada pelas conexões  uma conexão persistente a conexão persistente  implementada como conexão padrão no protocolo http 1 1  possibilita que uma conexão seja estabelecida para enviar várias requisições em seq ência sem a necessidade de esperar por cada resposta  no qual serão recebidas na mesma ordem em que as solicitações foram enviadas  um processo chamado de   pipelining    ref cf  fielding et al  1999  p  30  ref  pode também dar-se o caso de ser estabelecida uma conexão sem   pipelining    em que o cliente só faz nova requisição quando o servidor lhe envia a resposta  ou seja  o servidor fica inactivo até o objecto   html   gif   css  etc  atingir o seu destino no cliente se uma requisição incluir o cabeçalho  code connection  close  code   a conexão será encerrada após o envio da resposta correspondente  utiliza-se este cabeçalho quando não há suporte a conexões persistentes  quando for a última requisição a ser enviada nesta conexão  ou ainda  sempre que quiser encerrar a conexão mesmo que nem todas as requisições tenham sido completadas  além disso  o servidor pode fechar uma conexão se estiver ociosa por um determinado período de tempo     outros protocolos    existem outros tipos de protocolos como o   ftp    file transfer protocol  ou protocolo de transferência de arquivos   usado para envio de arquivos do computador para um servidor na web  o   smtp    simple mail transfer protocol  ou protocolo de transferência de correio simples   protocolo usado para   correio eletrônico    entre outros protocolos    esquema de comunicação   pedido básico de http cliente-servidor  get  ficheiro  http 1 1 host   ip  user-agent   agente  connection   tipo o agente é quem faz a ligação ao servidor  normalmente um   navegador  informática  navegador    o tipo indica como o servidor deve proceder com a conexão  é comumente utilizado para requisições persistentes uma requisição completa pode exigir muitas informações  a requisição abaixo - utilizando o método post - fora retirada do mozilla firefox v3 6b5  pt-br  para windows   post  diretorio arquivo html http 1 1 host  www exemplo com user-agent  mozilla 5 0  windows  u  windows nt 6 1  pt-br  rv 1 9 2b5  gecko 20091204 firefox 3 6b5 accept  text html application xhtml xml application xml q 0 9     q 0 8 accept-language  pt-br pt q 0 8 en-us q 0 5 en q 0 3 accept-encoding  gzip deflate accept-charset  iso-8859-1 utf-8 q 0 7   q 0 7 keep-alive  115 cookie  nome valor  nome2 valor2 connection  keep-alive content-length  28  usuario exemplo senha 123456   ver também       anexo lista de códigos de status http lista de códigos de status http      representational state transfer    rest     spdy     an http enhancement proposed by   google      web cache      websockets      http referrer    bibliografia      bastos  leonara de oliveira  ladeira  adriane cristina  protocolo http   -- melhorar esta referência --   cf  46 herrmann  eric  aprenda em 1 semana programação cgi em perl 5  rio de janeiro  campus  1997   ligações externas       categoria http    categoria protocolos internet    categoria protocolos de camada de aplicação    categoria padrões abertos    categoria navegadores web    categoria web  