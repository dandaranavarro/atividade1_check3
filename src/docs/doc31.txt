   imagem sorting quicksort anim gif thumb 250px direita uma animação do algoritmo de ordenação quicksort de uma matriz de valores ao acaso  as barras vermelhas marcam o elemento pivô  no início da animação  estando o elemento para o lado direito  é escolhido como o pivô      algoritmo    é uma sequência finita de   instrução instruções   bem definidas e não ambíguas  cada uma das quais devendo ser executadas mecânica ou eletronicamente em um intervalo de tempo finito e com uma quantidade de esforço finita  ref name  nceufrj    ref  ref name  univasf    ref  o conceito de algoritmo é frequentemente ilustrado pelo exemplo de uma receita culinária  embora muitos algoritmos sejam mais complexos  eles podem repetir passos  fazer   iteração iterações    ou necessitar de decisões  tais como comparações ou   lógica    até que a tarefa seja completada  um algoritmo corretamente executado não irá resolver um problema se estiver implementado incorretamente ou se não for apropriado ao problema  um algoritmo não representa  necessariamente  um   programa de computador   ref name  demotusai    ref   e sim os passos necessários para realizar uma tarefa  sua implementação pode ser feita por um   computador    por outro tipo de   autômato   ou mesmo por um ser humano  diferentes algoritmos podem realizar a mesma tarefa usando um conjunto diferenciado de instruções em mais ou menos tempo  espaço ou esforço do que outros  tal diferença pode ser reflexo da   complexidade computacional   aplicada  que depende de   estruturas de dados   adequadas ao algoritmo  por exemplo  um algoritmo para se vestir pode especificar que você vista primeiro as meias e os sapatos antes de vestir a calça enquanto outro algoritmo especifica que você deve primeiro vestir a calça e depois as meias e os sapatos  fica claro que o primeiro algoritmo é mais difícil de executar que o segundo apesar de ambos levarem ao mesmo resultado  o conceito de um algoritmo foi formalizado em   1936   pela   máquina de turing   de   alan turing   e pelo   cálculo lambda   de   alonzo church    que formaram as primeiras fundações da   ciência da computação      etimologia   os historiadores da palavra   algoritmo   encontraram a   etimologia origem   no sobrenome    al-khwarizmi    do matemático   pérsia persa   do   século ix   mohamed ben musa ref name  decomufop    ref   cujas obras foram traduzidas no ocidente cristão no   século xii    tendo uma delas recebido o nome   algorithmi de numero indorum    sobre os algoritmos usando o sistema de   sistema decimal numeração decimal    indiano   outros autores  entretanto  defendem a origem da palavra em   al-goreten    raiz - conceito que se pode aplicar aos cálculos   ref tavares  p  de campos     algoritmo       in    enciclopédia verbo luso-brasileira da cultura  edição século xxi   volume ii  editorial verbo  braga  janeiro de 1998 isbn 972-22-1864-6   ref    álgebra   e algorismo também formam formas corrompidas da palavra  pois as pessoas esqueciam as derivações originais  o dicionário vollst ndiges mathematisches lexicon  leipzig  1747  refere a palavra  algorithmus   nesta designação está combinado as noções de quatro cálculos aritméticos  nomeadamente a   adição      multiplicação      subtração   e   divisão    a frase  algorithmus infinitesimalis  foi na altura utilizado para significar   maneiras de calcular com quantidades infinitésimas   pequenas   uma invenção de   leibnitz    também é conhecido no meio financeiro  como  algos   ref  http   expresso sapo pt algoritmos-assaltam-mercados-de-icommoditiesi-depois-das-bolsas f714175 algoritmos e mercados  acedido em 20 de julho 2012  ref    formalismo     imagem fluxogranma02 gif thumb 365px   fluxograma    um exemplo de algoritmo imperativo  o estado em vermelho indica a entrada do algoritmo enquanto os estados em verde indicam as possíveis saídas   um   programa de computador   é essencialmente um algoritmo que diz ao   computador   os passos específicos e em que ordem eles devem ser executados  como por exemplo  os passos a serem tomados para calcular as notas que serão impressas nos boletins dos alunos de uma escola  logo  o algoritmo pode ser considerado uma sequência de operações que podem ser simuladas por uma   máquina de turing   completa quando os procedimentos de um algoritmo envolvem o   processamento de dados    a informação é lida de uma fonte de entrada  processada e retornada sob novo valor após processamento  o que geralmente é realizado com o auxílio de uma ou mais   estrutura de dados   para qualquer processo computacional  o algoritmo precisa estar rigorosamente definido  especificando a maneira que ele se comportará em todas as circunstâncias  a corretividade do algoritmo pode ser provada matematicamente  bem como a quantidade assintótica de tempo e espaço  complexidade  necessários para a sua execução  estes aspectos dos algoritmos são alvo da   análise de algoritmos   a maneira mais simples de se pensar um algoritmo é por uma   lista   de procedimentos bem definida  na qual as instruções são executadas passo a passo a partir do começo da lista  uma ideia que pode ser facilmente visualizada através de um   fluxograma    tal formalização adota as premissas da   programação imperativa    que é uma forma mecânica para visualizar e desenvolver um algoritmo  concepções alternativas para algoritmos variam em   programação funcional   e   programação lógica       término do algoritmo    alguns autores restringem a definição de algoritmo para procedimentos que eventualmente terminam    marvin minsky   constatou que se o tamanho de um procedimento não é conhecido de antemão  tentar descobri-lo é um problema indecidível  já que o procedimento pode ser executado infinitamente  de forma que nunca se terá a resposta  alan turing provou em   1936   que não existe máquina de turing para realizar tal análise para todos os casos  logo não há algoritmo para realizar tal tarefa para todos os casos  tal condição é conhecida atualmente como   problema da parada   para algoritmos intermináveis o sucesso não pode ser determinado pela interpretação da resposta e sim por condições impostas pelo próprio desenvolvedor do algoritmo durante sua execução    implementação   a maioria dos algoritmos é desenvolvida para ser implementada em um   programa de computador    apesar disso eles também podem ser implementados por outros modos tais como uma   rede neural   biológica  tal como no   cérebro   quando efetuamos operações aritméticas   em   circuito elétrico circuitos elétricos   ou até mesmo em dispositivos mecânicos para   programas   de computador existe uma grande variedade de   linguagem de programação linguagens de programação    cada uma com características específicas que podem facilitar a implementação de determinados algoritmos ou atender a propósitos mais gerais    análise de algoritmos   a análise de algoritmos é um ramo da   ciência da computação   que estuda as   técnicas de projeto de algoritmos técnicas de projeto de algoritmos   e os algoritmos de forma abstrata  sem estarem implementados em uma   linguagem de programação   em particular ou implementadas de algum outro modo  ela preocupa-se com os recursos necessários para a execução do algoritmo tais como o tempo de execução e o espaço de armazenamento de dados  deve-se perceber que para um dado algoritmo pode-se ter diferentes quantidades de recursos alocados de acordo com os parâmetros passados na entrada  por exemplo  se definirmos que o fatorial de um número natural é igual ao fatorial de seu antecessor multiplicado pelo próprio número  fica claro que a execução de  code fatorial 10   code  consome mais tempo que a execução de  code fatorial 5   code  um meio de exibir um algoritmo a fim de analisá-lo é através da implementação por   pseudocódigo   em português estruturado  o exemplo a seguir é um algoritmo em português estruturado que retorna  valor de saída  a soma de dois valores  também conhecidos como   parâmetro  s ou argumentos  valores de entrada  que são introduzidos na chamada da   sub-rotina função    code   algoritmo  somadedoisvalores    variável     soma a b  inteiro   inicio    escreva  digite um numero         leia a      escreva  digite outro numero         leia b      soma   a   b     escreva soma    fim   code    classificação       classificação por implementação    pode-se classificar algoritmos pela maneira pelo qual foram implementados      recursivo    ou    iterativo    - um   recursividade  ciência da computação  algoritmo recursivo   possui a característica de invocar a si mesmo repetidamente até que certa condição seja satisfeita e ele é terminado  que é um método comum em   programação funcional    algoritmos iterativos usam estruturas de repetição tais como laços  ou ainda estruturas de dados adicionais tais como   lifo pilhas    para resolver problemas  cada algoritmo recursivo possui um algoritmo iterativo equivalente e vice-versa  mas que pode ter mais ou menos complexidade em sua construção      lógico    - um algoritmo pode ser visto como uma dedução lógica controlada  o componente lógico expressa os axiomas usados na computação e o componente de controle determina a maneira como a dedução é aplicada aos axiomas  tal conceito é base para a   programação lógica        serial    ou    paralelo    - algoritmos são geralmente assumidos por serem executados instrução a instrução individualmente  como uma lista de execução  o que constitui um algoritmo serial  tal conceito é base para a   programação imperativa    por outro lado existem algoritmos executados paralelamente  que levam em conta as   arquitetura de computadores arquiteturas de computadores   com mais de um   processador   para executar mais de uma instrução ao mesmo tempo  tais algoritmos dividem os problemas em subproblemas e o delegam a quantos processadores estiverem disponíveis  agrupando no final o resultado dos subproblemas em um resultado final ao algoritmo  tal conceito é base para a   computação paralela programação paralela    de forma geral  algoritmos iterativos são paralelizáveis  por outro lado existem algoritmos que não são paralelizáveis  chamados então problemas inerentemente seriais      determinístico    ou    não-determinístico    - algoritmos determinísticos resolvem o problema com uma decisão exata a cada passo enquanto algoritmos não-determinísticos resolvem o problema ao deduzir os melhores passos através de estimativas sob forma de   heurística  s      exato    ou    aproximado    - enquanto alguns algoritmos encontram uma resposta exata  algoritmos de aproximação procuram uma resposta próxima a verdadeira solução  seja através de estratégia determinística ou aleatória  possuem aplicações práticas sobretudo para problemas muito complexos  do qual uma resposta correta é inviável devido à sua   complexidade computacional       classificação por paradigma    pode-se classificar algoritmos pela metodologia ou paradigma de seu desenvolvimento  tais como        divisão e conquista      - algoritmos de divisão e conquista reduzem repetidamente o problema em sub-problemas  geralmente de forma recursiva  até que o sub-problema é pequeno o suficiente para ser resolvido  um exemplo prático é o algoritmo de ordenação     merge sort      uma variante dessa metodologia é o   decremento e conquista    que resolve um sub-problema e utiliza a solução para resolver um problema maior  um exemplo prático é o algoritmo para   pesquisa binária          programação dinâmica      - pode-se utilizar a programação dinâmica para evitar o re-cálculo de solução já resolvidas anteriormente        algoritmo ganancioso      - um algoritmo ganancioso é similar à programação dinâmica  mas difere na medida em que as soluções dos sub-problemas não precisam ser conhecidas a cada passo  uma escolha gananciosa pode ser feita a cada momento com o que até então parece ser mais adequado        programação linear   -    a resolução de um problema através de programação linear envolve a maximização   minimização das entradas de um conjunto de desigualdades lineares      redução    - a redução resolve o problema ao transformá-lo em outro problema  é chamado também   transformação e conquista        busca e enumeração    - vários problemas podem ser modelados através de   grafo  s  um algoritmo de exploração de grafo pode ser usado para caminhar pela estrutura e retornam informações úteis para a resolução do problema  esta categoria inclui   algoritmo de busca algoritmos de busca   e   backtracking        paradigma heurístico e probabilístico    - algoritmos probabilísticos realizam escolhas aleatoriamente    algoritmo genético algoritmos genéticos   tentam encontrar a solução através de ciclos de mutações evolucionárias entre gerações de passos  tendendo para a solução exata do problema  algoritmos heurísticos encontram uma solução aproximada para o problema     classificação por campo de estudo    cada campo da ciência possui seus próprios problemas e respectivos algoritmos adequados para resolvê-los  exemplos clássicos são algoritmos de   algoritmo de busca busca    de   algoritmo de ordenação ordenação    de   análise numérica    de   teoria de grafos    de manipulação de   string cadeias de texto    de   geometria   computacional  de   análise combinatória    de   aprendizagem de máquina    de   criptografia    de   compressão de dados   e de   parser interpretação de texto       classificação por complexidade    alguns algoritmos são executados em tempo linear  de acordo com a entrada  enquanto outros são executados em tempo exponencial ou até mesmo nunca terminam de serem executados  alguns ditos problemas tem múltiplos algoritmos enquanto outros não possuem algoritmos para resolução      ver também       estrutura de dados      autômato      complexidade computacional      teoria da computabilidade      teoria da computação      garbage in  garbage out      máquina abstrata      negociações de alta frequência      algoritmo probabilístico      algoritmo de euclides     bibliografia      http   www novateceditora com br livros algoritmos  algoritmos e programação - teoria e prática  para universitários e profissionais de informática   novatec editora  isbn 85-7522-073-x    donald e  knuth    1973    the art of computer programming    volume 1  fundamental algorithms  2  edição   addison-wesley  isbn 0-201-03809-9    charles e  leiserson  thomas h  cormen  ronald l  rivest  clifford stein   algoritmos    teoria e prática     campus - rj  2002 isbn 8-535-20926-3  donald e  knuth    selected papers on analysis of algorithms    isbn 1-57586-212-3  http   www-cs-faculty stanford edu  uno aa html livro     jean luc chabert    a history of algorithms      from the pebble to the microchip    springer verlag  1999  isbn 978-3-540-63369-3        algorithmics  the spirit of computing    addison-wesley  2004  isbn 978-0-321-11784-7    t h  cormen  c e  leiserson  r l  rivest  c  stein    http   mitpress mit edu books introduction-algorithms introduction to algorithms   3rd edition   mit press  2009 isbn 978-026-203-384-8   donald e  knuth   http   www-cs-staff stanford edu  uno taocp html the art of computer programming     jon kleinberg  éva tardos     algorithm design    addison-wesley  2005 isbn 0-321-29535-8   http   www aw-bc com info kleinberg  livro   sanjoy dasgupta  christos papadimitriou  umesh vazirani   http   highered mheducation com sites 0073523402 index html algorithms   richard e  neapolitan  kumarss naimipour     foundations of algorithms using java pseudocode      jones   bartlett learning  2004 isbn 0-763-72129-8     laira vieira toscani  paulo a  s  veloso    complexidade de algoritmos    série livros didáticos informática ufrgs - vol  13   bookman isbn 8-540-70139-1  ricardo linden     algoritmos genéticos    2a edição     brasport isbn 8-574-52373-9    jesús bisbal riera    manual de algorítmica      recursividad  complejidad y dise o de algoritmos    editorial uoc  2009 isbn 8-497-88027-7    ligações externas        http   www nist gov dads  dictionary of algorithms and data structures    http   algoritmizando com desenvolvimento aprender-algoritmos  aprenda a programar   série de artigos didáticos ensinando português estruturado   http   cae ucb br conteudo unbfga downloads calango jar  aplicativo  jar para testes de algoritmo  www ucb br     http   algoritmizando com desenvolvimento 40-exercicios-de-algoritmos-resolvidos-para-estudo  exercícios resolvidos de algoritmos para estudo    http   www ucoder com br site para aprendizado e treinamento de algoritmos e estrutura de dados    http   cgm cs mcgill ca  godfried teaching algorithms-web html  data structures and algorithms godfried toussaint na universidade mcgill  montréal     http   www algorist com  the algorithm design manual  2nd edition    http   www ime usp br  pf algoritmos  projeto de algoritmos em c    http   www ime usp br  pf analise de algoritmos slides-2008 aulas4up pdf análise de algoritmos    http   www ime usp br  pf livrinho-aa aa-booklet pdf minicurso de análise de algoritmos    http   www ime usp br  pf analise de algoritmos aulas dicionario html dicionário    http   www ime usp br  pf analise de algoritmos stolfi broder86pessimal pdf  a  broder  j  stolfi   pessimal algorithms and simplexity analysis   categoria algoritmos      categoria terminologia informática    categoria computação    categoria ciência da computação  